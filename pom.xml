<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.sample</groupId>
	<artifactId>slowgrid</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>slow-grid-sample</name>

	<properties>
		<!-- The Vaadin version to use -->
		<vaadin.version>10.0.0.beta1</vaadin.version>
		<flow.version>1.0.0.beta2</flow.version>
		<jetty.plugin.version>9.4.7.v20170914</jetty.plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
        <failOnMissingWebXml>false</failOnMissingWebXml>
		<!-- JUnit version -->
		<junit.version>4.12</junit.version>
	</properties>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
        <repository>
            <id>vaadin-prereleases</id>
            <url>http://maven.vaadin.com/vaadin-prerelase</url>
        </repository>
	</repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>vaadin-prereleases</id>
            <url>http://maven.vaadin.com/vaadin-prerelase</url>
        </pluginRepository>
    </pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
            
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
		    <groupId>com.vaadin</groupId>
		    <artifactId>vaadin-testbench</artifactId>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- detect WebDriver and load correct one (https://github.com/bonigarcia/webdrivermanager) -->
		<!-- Important: for older browser versions the version of the drivers might need to be specified: -->
		<!-- e.g. with parameter adding -Dwdm.chromeDriverVersion=2.31 for supporting Chrome 58 -->
		<dependency>
		    <groupId>io.github.bonigarcia</groupId>
		    <artifactId>webdrivermanager</artifactId>
		    <version>2.0.0</version>
		</dependency>
		
		<!-- logback -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-core</artifactId>
		</dependency>
		
	</dependencies>

	<build>
		<plugins>
			<!-- The Jetty plugin allows us to easily test the development build by
				running jetty:run on the command line. -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.plugin.version}</version>
				<configuration>
					<scanIntervalSeconds>2</scanIntervalSeconds>
				</configuration>
				
				<executions>
					<!-- start Jetty in pre-integration-test -->
					<execution>
                           <id>start-jetty</id>
                           <phase>pre-integration-test</phase>
                           <goals>
                               <goal>start</goal>
                           </goals>
                           <configuration>
							<daemon>true</daemon>
							<reload>manual</reload>
						</configuration>
                       </execution>
                       <!-- and stop Jetty in post-integration-test -->
                       <execution>
                           <id>stop-jetty</id>
                           <phase>post-integration-test</phase>
                           <goals>
                               <goal>stop</goal>
                           </goals>
                           <configuration>
                           	   <stopPort>8989</stopPort>
                               <stopKey>stop</stopKey>
                           </configuration>
                       </execution>
				</executions>
			</plugin>
			
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-failsafe-plugin</artifactId>
			    <version>2.20.1</version>
			    <executions>
			        <execution>
			            <id>performance-ui-tests</id>
			            <phase>integration-test</phase>
			            <goals>
			                <goal>integration-test</goal>
			            </goals>
			            <configuration>
			                <skip>false</skip>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			
		</plugins>
	</build>

    <profiles>
        <profile>
            <!-- Vaadin pre-release repositories -->
            <id>production</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-server-production-mode</artifactId>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>flow-maven-plugin</artifactId>
                        <version>${flow.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>copy-production-files</goal>
                                    <goal>package-for-production</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
